{"version":3,"sources":["services/databaseApi.js","components/Spinner/Spinner.jsx","components/Spinner/Spinner.module.css","components/DetailsPage/MovieDetails.module.css","components/Cast/Cast.jsx","components/views/Cast.js","components/Reviews/Reviews.jsx","components/views/Reviews.js","components/DetailsPage/DetailsPage.jsx","components/views/MovieDetailsPage.js"],"names":["baseURL","key","fetchMovieDetails","movieId","fetch","then","res","json","fetchMovieWithQuery","nextQuery","data","results","fetchPerson","cast","fetchReviews","fetchTrandingMovies","Spinner","className","css","spinner","type","color","height","width","timeout","Component","module","exports","Cast","persons","map","person","src","profile_path","alt","name","character","id","CastPage","state","loading","error","this","setState","databaseApi","props","match","params","catch","finally","message","length","Reviews","reviews","el","author","content","ReviewsPage","DetailsPage","movieInfo","about","poster_path","title","info","Number","parseInt","release_date","infoItem","vote_average","overview","genres","genre","MovieDetailsPage","handleBack","location","from","history","push","routes","home","backButton","onClick","aditional","to","pathname","url","path","component"],"mappings":"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","file":"static/js/movieDetailsPage.db5f327a.chunk.js","sourcesContent":["const baseURL = 'https://api.themoviedb.org/3';\r\nconst key = 'c19c5b12e1a277621ccd20a2c2d3142a';\r\n\r\n\r\nconst fetchTrandingMovies = () => {\r\n  return fetch(`${baseURL}/trending/movie/week?api_key=${key}`)\r\n  .then(res=> res.json());\r\n}\r\nconst fetchMovieDetails = movieId =>  {\r\n  return fetch(`${baseURL}/movie/${movieId}?api_key=${key}`).then(res=> res.json());\r\n};\r\nconst fetchPerson = movieId =>  {\r\n  return fetch(`${baseURL}/movie/${movieId}/credits?api_key=${key}`).then(res=> res.json())\r\n  .then(res => res.cast);\r\n};\r\nconst fetchReviews = movieId =>  {\r\n  return fetch(`${baseURL}/movie/${movieId}/reviews?api_key=${key}`).then(res=> res.json())\r\n  .then(res => res.results);\r\n};\r\n\r\nconst fetchMovieWithQuery  = nextQuery =>  {\r\n  return fetch(`${baseURL}/search/movie?api_key=${key}&language=en-US&query=${nextQuery}&page=1&include_adult=false`)\r\n  .then(res =>  res.json())\r\n  .then(data =>  data.results);\r\n};\r\n\r\n\r\nexport  default { fetchMovieDetails, fetchMovieWithQuery, fetchPerson, fetchReviews, fetchTrandingMovies }","import React, { Component } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport css from '../Spinner/Spinner.module.css';\r\n\r\nclass Spinner extends Component {\r\n  render() {\r\n    return (\r\n      <Loader className={css.spinner}\r\n        type=\"Puff\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default Spinner;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__slLEt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backButton\":\"MovieDetails_backButton__3B3K-\",\"about\":\"MovieDetails_about__1QHcR\",\"info\":\"MovieDetails_info__1OqWg\",\"infoItem\":\"MovieDetails_infoItem__1A8SL\",\"aditional\":\"MovieDetails_aditional__3tuAx\",\"spinner\":\"MovieDetails_spinner__3rzan\"};","import React from 'react';\r\n\r\nconst Cast = ({persons}) => {\r\n  return(\r\n    <ul>\r\n        {persons.map((person) => {\r\n          return  (\r\n          <>\r\n            <li key={person.id}>\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w500/${person.profile_path}`}\r\n                alt=\"There is no poster avalible\"\r\n                width=\"120\"\r\n              />\r\n              <p>{person.name}</p>\r\n              <p>\r\n                <b>Character:</b> {person.character}\r\n              </p>\r\n            </li>\r\n          </>\r\n          )\r\n        })}\r\n      </ul>   \r\n  )\r\n}\r\nexport default Cast;","import React, {Component} from \"react\"\r\nimport databaseApi from \"../../services/databaseApi\"\r\nimport Spinner from \"../Spinner/Spinner\"\r\nimport Cast from \"../Cast/Cast\"\r\n\r\nclass CastPage extends Component {\r\n  state = {\r\n    persons: [],\r\n    loading: false,\r\n    error: null,\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({loading: true})\r\n    databaseApi\r\n      .fetchPerson(this.props.match.params.movieId)\r\n      .then((res) => this.setState({persons: res}))\r\n      .catch((error) => this.setState({error}))\r\n      .finally(() => this.setState({loading: false}))\r\n  }\r\n\r\n  render() {\r\n    const {persons, loading, error} = this.state\r\n    return (\r\n      <>\r\n        {error && <p>{error.message}</p>}\r\n        {loading && <Spinner />}\r\n        {persons.length > 0 && !loading && <Cast persons={persons} />}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CastPage\r\n","import React from 'react';\r\n\r\nconst Reviews = ({reviews}) => {\r\n  return(\r\n    <ul>\r\n    {reviews.map((el) => {\r\n      return  (\r\n      <>\r\n        <li key={el.id}>\r\n          <p>{el.author}</p>\r\n          <p>{el.content} </p>\r\n        </li>\r\n      </>\r\n      )\r\n    })}\r\n  </ul>     \r\n  )\r\n}\r\nexport default Reviews;","import React, {Component} from \"react\";\r\nimport databaseApi from \"../../services/databaseApi\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport Reviews from \"../Reviews/Reviews\";\r\n\r\nclass ReviewsPage extends Component {\r\n  state = {\r\n    reviews: [],\r\n    loading: false,\r\n    error: null,\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({loading: true})\r\n    databaseApi\r\n      .fetchReviews(this.props.match.params.movieId)\r\n      .then((res) => this.setState({reviews: res}))\r\n      .catch((error) => this.setState({error}))\r\n      .finally(() => this.setState({loading: false}))\r\n  }\r\n\r\n  render() {\r\n    const {reviews, loading, error} = this.state\r\n    return (\r\n      <>\r\n        {error && <p>{error.message}</p>}\r\n        {loading && (\r\n          <Spinner />\r\n        )}\r\n        {reviews.length > 0 && !loading && <Reviews reviews={reviews} />}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ReviewsPage\r\n","import React from 'react';\r\nimport css from \"./MovieDetails.module.css\";\r\n\r\n\r\nconst DetailsPage = ({movieInfo}) => {\r\n\r\n  return(\r\n    <>\r\n    <div className={css.about}>\r\n      <img src={`https://image.tmdb.org/t/p/w300/${movieInfo.poster_path}`} alt={movieInfo.title} />\r\n\r\n      <div className={css.info}>\r\n        <h2>\r\n          {movieInfo.title} ({Number.parseInt(movieInfo.release_date)})\r\n        </h2>\r\n        <ul>\r\n          <li className={css.infoItem}>User Score: {movieInfo.vote_average * 10} %</li>\r\n          <li className={css.infoItem}>\r\n            <p>\r\n              <b>Overview</b>\r\n            </p>\r\n            {movieInfo.overview}\r\n          </li>\r\n\r\n          <li className={css.infoItem}>\r\n            <p>\r\n              <b>Genres</b>\r\n            </p>\r\n            <ul>\r\n              {movieInfo.genres.map((genre) => {\r\n                return <li key={genre.id}>{genre.name}</li>\r\n              })}\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default DetailsPage","import React, {Component} from \"react\"\r\nimport databaseApi from \"../../services/databaseApi\"\r\nimport routes from \"../../routes\"\r\n\r\nimport {Route, Link} from \"react-router-dom\"\r\nimport CastPage from \"../views/Cast\"\r\nimport ReviewsPage from \"../views/Reviews\"\r\n\r\nimport css from \"../DetailsPage/MovieDetails.module.css\"\r\nimport Spinner from \"../Spinner/Spinner\"\r\nimport DetailsPage from \"../DetailsPage/DetailsPage\"\r\n\r\nclass MovieDetailsPage extends Component {\r\n  state = {\r\n    movieInfo: null,\r\n    loading: false,\r\n    error: null,\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {match} = this.props\r\n    databaseApi\r\n      .fetchMovieDetails(match.params.movieId)\r\n      .then((movieInfo) => this.setState({movieInfo}))\r\n      .catch((error) => this.setState({error}))\r\n      .finally(() => this.setState({loading: false}))\r\n  }\r\n\r\n  handleBack = () => {\r\n    const {state} = this.props.location\r\n    if (state && state.from) {\r\n      return this.props.history.push(state.from)\r\n    }\r\n    this.props.history.push(routes.home)\r\n  }\r\n\r\n  render() {\r\n    const {movieInfo, loading, error} = this.state\r\n    const {match} = this.props\r\n\r\n    return (\r\n      <>\r\n        <button className={css.backButton} type=\"button\" onClick={this.handleBack}>\r\n          <p>Go Back</p>\r\n        </button>\r\n        <br />\r\n        {error && <p>{error.message}</p>}\r\n        {loading && <Spinner />}\r\n        {movieInfo && !loading && (\r\n          <>\r\n            <DetailsPage movieInfo={movieInfo} />\r\n\r\n            <p>Aditional Informations</p>\r\n            <div className={css.aditional}>\r\n              <Link\r\n                to={{\r\n                  pathname: `${match.url}/cast`,\r\n                  state: {\r\n                    from:\r\n                      this.props.location.state && this.props.location.state.from ? this.props.location.state.from : \"\",\r\n                  },\r\n                }}\r\n                className={css.Cast}\r\n              >\r\n                <p>Cast</p>\r\n              </Link>\r\n              <Link\r\n                to={{\r\n                  pathname: `${match.url}/reviews`,\r\n                  state: {\r\n                    from:\r\n                      this.props.location.state && this.props.location.state.from ? this.props.location.state.from : \"\",\r\n                  },\r\n                }}\r\n                className={css.Reviews}\r\n              >\r\n                <p>Reviews</p>\r\n              </Link>\r\n            </div>\r\n\r\n            <Route path={`${match.path}/cast`} component={CastPage} />\r\n            <Route path={`${match.path}/reviews`} component={ReviewsPage} />\r\n          </>\r\n        )}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MovieDetailsPage\r\n"],"sourceRoot":""}